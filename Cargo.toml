[package]
name = "embedded-test-example"
version = "0.1.0"
edition = "2021"
repository = "https://github.com/probe-rs/embedded-test-example"
license = "MIT OR Apache-2.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
cortex-m = "0.7"
cortex-m-rt = "0.7"

# dependencies when using the log feature
log = { version = "0.4.20", optional = true}

# dependencies when using the demft feature
defmt = { version = "0.3.5", optional = true }
defmt-rtt = { version = "0.4.0", optional = true }

[dependencies.stm32f4xx-hal]
version = "0.20.0"
features = ["stm32f411"] # replace the model of your microcontroller here

[dev-dependencies]
embedded-test = {version="0.3.0", features = ["embassy"]}

embassy-executor = { default-features = false, version="0.5.0", features = ["executor-thread", "arch-cortex-m"] }
# Note: You need to enable at least one executor feature on embassy 0.5.x

# You need a panic handler that invokes `semihosting::process::abort()` on exit.
# For example: Use the patched panic-probe:
panic-probe = {git = "https://github.com/t-moe/defmt"}  # the upstream create does not use semihosting yet
# NOTE: When you use the patched panic-probe, you'll also need to:
# * provide your own exception handler, as panic_probe no longer provides this
# * patch defmt globally, as it is a native library (see below)

[patch.crates-io] # Patch defmt globally, as it is a native library.
defmt = { git = "https://github.com/t-moe/defmt" }
defmt-rtt = { git = "https://github.com/t-moe/defmt" }

[features]
default = ["defmt"]
log = ["dep:log", "embedded-test/log", "panic-probe/print-rtt"]
defmt = ["dep:defmt-rtt", "dep:defmt", "embedded-test/defmt", "panic-probe/print-defmt"]
# Note: You must adapt .cargo/config when disabling the defmt feature

[[test]]
name = "example_test"
harness = false
